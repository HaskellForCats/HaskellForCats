name: HTTP
version: 4000.2.19
id: HTTP-4000.2.19-ce3b182e211b3bbba0ef8a4592ec57a7
license: BSD3
copyright:
maintainer: Ganesh Sittampalam <ganesh@earth.li>
stability:
homepage: https://github.com/haskell/HTTP
package-url:
synopsis: A library for client-side HTTP
description: The HTTP package supports client-side web programming in Haskell. It lets you set up
             HTTP connections, transmitting requests and processing the responses coming back, all
             from within the comforts of Haskell. It's dependent on the network package to operate,
             but other than that, the implementation is all written in Haskell.
             .
             A basic API for issuing single HTTP requests + receiving responses is provided. On top
             of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
             it taking care of handling the management of persistent connections, proxies,
             state (cookies) and authentication credentials required to handle multi-step
             interactions with a web server.
             .
             The representation of the bytes flowing across is extensible via the use of a type class,
             letting you pick the representation of requests and responses that best fits your use.
             Some pre-packaged, common instances are provided for you (@ByteString@, @String@).
             .
             Here's an example use:
             .
             >
             >    do
             >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
             >              -- fetch document and return it (as a 'String'.)
             >      fmap (take 100) (getResponseBody rsp)
             >
             >    do
             >      (_, rsp)
             >         <- Network.Browser.browse $ do
             >               setAllowRedirects True -- handle HTTP redirects
             >               request $ getRequest "http://www.haskell.org/"
             >      return (take 100 (rspBody rsp))
category: Network
author: Warrick Gray <warrick.gray@hotmail.com>
exposed: True
exposed-modules: Network.BufferType Network.Stream
                 Network.StreamDebugger Network.StreamSocket Network.TCP
                 Network.HTTP Network.HTTP.Headers Network.HTTP.Base
                 Network.HTTP.Stream Network.HTTP.Auth Network.HTTP.Cookie
                 Network.HTTP.Proxy Network.HTTP.HandleStream Network.Browser
hidden-modules: Network.HTTP.Base64 Network.HTTP.MD5Aux
                Network.HTTP.Utils Paths_HTTP
trusted: False
import-dirs: /Users/evx001/HaskellForCats/boxed000/.cabal-sandbox/lib/x86_64-osx-ghc-7.8.2/HTTP-4000.2.19
library-dirs: /Users/evx001/HaskellForCats/boxed000/.cabal-sandbox/lib/x86_64-osx-ghc-7.8.2/HTTP-4000.2.19
hs-libraries: HSHTTP-4000.2.19
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: array-0.5.0.0-9f212a0e8caa74d931af75060b4de2ab
         base-4.7.0.0-a333addb6892f3cc2e6baa5ec782bd04
         bytestring-0.10.4.0-bb05a80e3e1ccfe8d2409566584d5264
         mtl-2.2.1-b64a52e0211149a17ab838a7f414b92a
         network-2.6.0.2-32e027e3ef0cf12f09381f1f48458561
         network-uri-2.6.0.1-cbd5d3f83ff8fa34682574bb016ef7de
         old-time-1.1.0.2-fa6a2fdfb771d1020c82e69f56ca2ab8
         parsec-3.1.8-c9ccefeb039af3f3f1e2d31ab04c2aa0
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /Users/evx001/HaskellForCats/boxed000/.cabal-sandbox/share/doc/x86_64-osx-ghc-7.8.2/HTTP-4000.2.19/html/HTTP.haddock
haddock-html: /Users/evx001/HaskellForCats/boxed000/.cabal-sandbox/share/doc/x86_64-osx-ghc-7.8.2/HTTP-4000.2.19/html
